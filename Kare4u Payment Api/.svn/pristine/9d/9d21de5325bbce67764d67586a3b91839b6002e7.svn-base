@model Kare4uPaymentPlatform.Models.PaytmResponse

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        //var paytmResponse = {
          //  TXNID: "ghj",
            //BANKTXNID: "10235",
            //TXNAMOUNT: "",
            //CURRENCY: "dollar"
        //}
        //var saveData = $.ajax({
        //    type: 'POST',
        //    url: "/Payment/AfterCheckResponse",
        //    data: paytmResponse,
        //    dataType: "text",
        //    async: false

        //});
       // $.post("/Payment/AfterCheckResponse", paytmResponse);

        var response1 = @Html.Raw(Json.Encode(Model));
        console.log(response1);
        $("#CURRENCY").val(response1.CURRENCY);
        //$("#CURRENCY").val(response1.CURRENCY);

        $("#UniqueReference").val(response1.UniqueReference);
        var urlData = JSON.stringify({ "MID": response1.MID, "ORDERID": response1.ORDERID, "CHECKSUMHASH": response1.CHECKSUMHASH });

        $.ajax({
            
            url: "https://securegw-stage.paytm.in/merchant-status/getTxnStatus?JsonData=" + urlData,
            type: 'GET',
            success: function (res) {
                console.log(res);
                alert(res);

                $("#MID").val(res.MID);
                $("#TXNID").val(res.TXNID);
                $("#BANKTXNID").val(res.BANKTXNID);
                $("#TXNAMOUNT").val(res.TXNAMOUNT);
                
                $("#ORDERID").val(res.ORDERID);
                $("#STATUS").val(res.STATUS);
                $("#RESPCODE").val(res.RESPCODE);
                $("#RESPMSG").val(res.RESPMSG);
                $("#TXNDATE").val(res.TXNDATE);
                $("#GATEWAYNAME").val(res.GATEWAYNAME);
                $("#BANKNAME").val(res.BANKNAME);
                $("#PAYMENTMODE").val(res.PAYMENTMODE);
                
                $("#PROMO_CAMP_ID").val();
                $("#PROMO_STATUS").val();
                $("#PROMO_RESPCODE").val();
                $("#CHECKSUMHASH").val();
                document.getElementById("signInForm").submit();
        
            }
        });
       
    });


</script>
<h2>CheckResponse</h2>


<form action="AfterCheckResponse" method="POST" id="signInForm">
    <input type="text" name="MID" value="" id="MID"/>
    <input type="text" name="TXNID" value="" id="TXNID"/>
    <input type="text" name="BANKTXNID" value="" id="BANKTXNID"/>
    <input type="text" name="TXNAMOUNT" value="" id="TXNAMOUNT"/>
    <input type="text" name="CURRENCY" value="" id="CURRENCY"/>

    <input type="text" name="ORDERID" value="" id="ORDERID"/>
    <input type="text" name="STATUS" value="" id="STATUS"/>
    <input type="text" name="RESPCODE" value="" id="RESPCODE"/>
    <input type="text" name="RESPMSG" value="" id="RESPMSG"/>

    <input type="text" name="TXNDATE" value="" id="TXNDATE"/>
    <input type="text" name="GATEWAYNAME" value="" id="GATEWAYNAME"/>
    <input type="text" name="BANKNAME" value="" id="BANKNAME"/>
    <input type="text" name="PAYMENTMODE" value="" id="PAYMENTMODE"/>

    <input type="text" name="PROMO_CAMP_ID" value="" id="PROMO_CAMP_ID"/>
    <input type="text" name="PROMO_STATUS" value="" id="PROMO_STATUS"/>
    <input type="text" name="PROMO_RESPCODE" value="" id="PROMO_RESPCODE"/>
    <input type="text" name="CHECKSUMHASH" value="" id="CHECKSUMHASH"/>
    <input type="text" name="UniqueReference" value="" id="UniqueReference"/>
    <input type="submit" value="Sign in" />
</form>

@*@using (Html.BeginForm("AfterCheckResponse", "Payment")) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>PaytmResponse</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.MID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TXNID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TXNID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TXNID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BANKTXNID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BANKTXNID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BANKTXNID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TXNAMOUNT, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TXNAMOUNT, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TXNAMOUNT, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CURRENCY, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CURRENCY, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CURRENCY, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ORDERID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ORDERID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ORDERID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.STATUS, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.STATUS, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.STATUS, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RESPCODE, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RESPCODE, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RESPCODE, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RESPMSG, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RESPMSG, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RESPMSG, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TXNDATE, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TXNDATE, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TXNDATE, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GATEWAYNAME, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GATEWAYNAME, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GATEWAYNAME, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BANKNAME, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BANKNAME, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BANKNAME, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PAYMENTMODE, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PAYMENTMODE, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PAYMENTMODE, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PROMO_CAMP_ID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PROMO_CAMP_ID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PROMO_CAMP_ID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PROMO_STATUS, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PROMO_STATUS, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PROMO_STATUS, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PROMO_RESPCODE, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PROMO_RESPCODE, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PROMO_RESPCODE, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CHECKSUMHASH, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CHECKSUMHASH, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CHECKSUMHASH, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UniqueReference, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UniqueReference, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UniqueReference, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@
